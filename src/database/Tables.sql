CREATE TABLE INGREDIENTS (
ING_NAME VARCHAR(30),
AMOUNT_AVAILABLE INTEGER,
AMOUNT_ORDERED INTEGER,
CONSTRAINT ING_PK PRIMARY KEY(ING_NAME)
);

CREATE TABLE COURSES (

)

CREATE TABLE CUSTOMERS (
CUSTOMER_ID INTEGER GENERATED ALWAYS AS IDENTITY,
CUSTOMER_TYPE BOOLEAN,
FIRST_NAME VARCHAR(30),
LAST_NAME VARCHAR(30),
SECONDARY_FIRST_NAME(30),
SECONDARY_LAST_NAME(30),
COMPANY_NAME(30),
ADRESS VARCHAR(60),
POSTBOX INTEGER,
TELEPHONE_PRIVATE INTEGER,
TELEPHONE_WORK INTEGER,
TELEPHONE_SECONDARY INTEGER,
EMAIL VARCHAR(20),
EMAIL_SECONDARY VARCHAR(20),
CONSTRAINT CUSTOMER_PK PRIMARY KEY(CUSTOMER_ID) 
);

CREATE TABLE ORDERS (
ORDER_ID INTEGER GENERATED ALWAYS AS IDENTITY,
ORDER_TIME INTEGER,
DELIVERY_TIME INTEGER,
DELIVERY_ADRESS, --CUSTOMER ADRESS?
CUSTOMER_TYPE BOOLEAN,
CONSTRAINT ORDER_PK PRIMARY KEY(ORDER_ID)
);

CREATE TABLE ORDERS_ARCHIVE (
REC_ORDER_ID INTEGER GENERATED ALWAYS AS IDENTITY,
ORDER_TIME INTEGER,
DELIVERY_TIME INTEGER,
DELIVERY_ADRESS, --CUSTOMER ADRESS?
CUSTOMER_TYPE BOOLEAN
);

CREATE TABLE RECURRING_ORDERS (

);

CREATE TABLE RECCURING_ORDERS_ARCHIVE (

);

CREATE TABLE SCHEDULE (

);

CREATE TABLE EMPLOYEES (
EMPLOYEE_ID INTEGER GENERATED ALWAYS AS IDENTITY,
FIRST_NAME VARCHAR(30),
LAST_NAME VARCHAR(30),
ADRESS VARCHAR(60),
EMAIL VARCHAR(20),
TELEPHONE_PRIVATE INTEGER,
TELEPHONE_WORK INTEGER,
TELEPHONE_SECONDARY,
CONSTRAINT EMPLOYEES_PK PRIMARY KEY(EMPLOYEE_ID)
);

CREATE TABLE SHOPPING_LIST (

);

--CREATE TABLE FINANCES (

--)